---
# yamllint disable rule:line-length

- name: Deploy PostgreSQL HA Cluster (based on "Patroni" and "{{ dcs_type }}")
  hosts: localhost
  gather_facts: false
  vars_files:
    - vars/main.yml
  vars:
    minimal_ansible_version: 2.7.0
  tasks:
    - name: Checking ansible version
      fail:
        msg: "Ansible version must be {{ minimal_ansible_version }} or higher"
      when: ansible_version.full is version(minimal_ansible_version, '<')

- import_playbook: etcd_cluster.yml
  when: not dcs_exists|bool and dcs_type == "etcd"
  tags: etcd

- hosts: postgres_cluster
  become: true
  become_method: sudo
  gather_facts: true
  any_errors_fatal: true
  vars_files:
    - vars/main.yml
    - vars/system.yml
    - "vars/{{ ansible_os_family }}.yml"

  pre_tasks:
    - name: Include main variables
      ansible.builtin.include_vars: "vars/main.yml"
      tags: always

    - name: Include system variables
      ansible.builtin.include_vars: "vars/system.yml"
      tags: always

    - name: Include OS-specific variables
      ansible.builtin.include_vars: "vars/{{ ansible_os_family }}.yml"
      tags: always

  roles:
    - role: hostname
    - role: etc_hosts
    - role: add-repository
    - role: packages
    - role: ssh-keys

- hosts: pgbackrest:postgres_cluster
  become: true
  become_method: sudo
  gather_facts: true
  any_errors_fatal: true
  vars_files:
    - vars/main.yml
    - "vars/{{ ansible_os_family }}.yml"
  roles:
    - role: pgbackrest
      when: pgbackrest_install|bool

- hosts: postgres_cluster
  become: true
  become_method: sudo
  gather_facts: true
  any_errors_fatal: true
  vars_files:
    - vars/main.yml
    - /home/postgres/build/creds.yml
    - vars/system.yml
    - "vars/{{ ansible_os_family }}.yml"

  roles:

    - role: patroni

    - role: pgbackrest/stanza-create
      when: pgbackrest_install|bool

    # optional
    - role: postgresql-users
      when: is_master == "true" and postgresql_users | length > 0

    - role: postgresql-databases
      when: is_master == "true" and postgresql_databases | length > 0

    - role: postgresql-extensions
      when: is_master == "true" and postgresql_extensions | length > 0

    - role: pg-profile
      when: is_master == "true" and postgresql_extensions | length > 0

    # Cron Jobs and bash profile
    - role: cron

    # Node Exporter
    - role: node_exporter

    # Postgres Exporter
    - role: postgres_exporter

    # vmagent (telemetry) config
    - role: vmagent

    # postfix (mail) service enable and start
    - role: postfix

    # finish (info)
    - role: deploy-finish

...
